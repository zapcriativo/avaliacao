@model DomainProduct.Entities.Category
@{
    ViewBag.Title = Model.Name;
    Layout = "~/Views/Shared/Base/_LayoutBreadCrumbLeftSideBar.cshtml";
    var returnUrl = HttpContext.Current.Request.Url.AbsolutePath;
}
@section breadcrumbs {
    <div class="ui container">
        <div class="ui two column grid stackable middle aligned">
            <div class="row">
                <div class="column">
                    <h1>@ViewBag.Title</h1>
                    <div class="ui breadcrumb text small">
                        <a class="section" href="/">Home</a>
                        <i class="right angle icon divider"></i>
                        <div class="active section">@(Model != null ? Model.Name : "")</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section banner {
    @if (Model != null)
    {
        <div class="sixteen wide column">
            <!-- ~/Views/Shared/Blocks/Banner/_BannerCategory.cshtml -->
            @Html.Action("BannerCategory", "Banner", new { id = Model.IdCategory, type = 'F' })
        </div>
    }
}
@section filters {
    <div class="four wide column filterColumn">
        <div class="row one column">
            <!-- Page: ~/Views/Shared/Common/_FilterMenu.cshtml -->
            @Html.Action("FilterMenu", "Product")
            <div class="ui divider hidden"></div>
            <!-- Page: ~/Views/Shared/Blocks/Banner/_SideHalfBanner.cshtml -->
            @Html.Action("SideHalfBannerCategory", "Banner", new { categoryId = Model.IdCategory })
        </div>
    </div>
}
<div class="twelve wide column">
    <div class="ui grid">
        <div class="row one column">
            <div class="column right aligned right floated">
                <button class="ui mobile only left floated icon blue button filterbutton right labeled" data-tooltip="Filtros" data-inverted="">
                    <i class="filter icon"></i>
                    Filtros
                </button>
                <div class="ui dropdown button dropdownorder">
                    <span class="text">Ordenar por</span>
                    <i class="dropdown icon"></i>
                    <div class="menu">
                        <div class="item" data-value="lancamentos">
                            <i class="asterisk icon"></i>
                            Lançamentos
                        </div>
                        <div class="item" data-value="mais_vendidos">
                            <i class="diamond icon"></i>
                            Mais Vendidos
                        </div>
                        <div class="item" data-value="nome_a_z">
                            <i class="sort alphabet ascending icon"></i>
                            Nome [A-Z]
                        </div>
                        <div class="item" data-value="nome_z_a">
                            <i class="sort alphabet descending icon"></i>
                            Nome [Z-A]
                        </div>
                        <div class="item" data-value="menor_preco">
                            <i class="sort numeric ascending icon"></i>
                            Preço [Menor-Maior]
                        </div>
                        <div class="item" data-value="maior_preco">
                            <i class="sort numeric descending icon"></i>
                            Preço [Maior-Menor]
                        </div>
                    </div>
                </div>
                <button id="viewgrid" class="ui icon button viewgrid mobile hide" data-tooltip="Grid" data-inverted="">
                    <i class="grid layout icon"></i>
                </button>
                <button id="viewlist" class="ui icon button viewlist mobile hide" data-tooltip="Lista" data-inverted="">
                    <i class="list layout icon"></i>
                </button>
            </div>
        </div>
    </div>
    <div id="list">
        <!-- ~/Views/Shared/Blocks/Product/_ProductsCategoryList.cshtml -->
        <!-- ~/Views/Shared/Blocks/Product/_ProductsCategoryGrid.cshtml -->
        @if (Model != null)
        {
            <div class="categoryProducts">
                @Html.Action("GetProducts", "Product", new
           {
               category = Model.IdCategory,
               viewList = Request.QueryString["viewList"] ?? "",
               pageNumber = Request.QueryString["pageNumber"] ?? "",
               pageSize = 12,
               order = Request.QueryString["order"] ?? "",
               brand = Request.QueryString["brand"] ?? "",
               group = Request.QueryString["group"] ?? "",
               initialPrice = Request.QueryString["initialPrice"] ?? "",
               finalPrice = Request.QueryString["finalPrice"] ?? "",
               variations = Request.QueryString["variations"] ?? "",
               idAttribute = Request.QueryString["idAttribute"] ?? ""
           })
            </div>
        }
    </div>
</div>
<input type="hidden" name="GenericPageFilter" id="GenericPageFilter" value="@Model.IdCategory" />
@section gtm {
    @Html.Action("GoogleTagManager", "Common", new { origin = ViewContext.RouteData.Values["controller"] })
}
@section custom_js{
    <script>
        @{
            string json_ = "";
            string labelFilters = "";
            string pageNumberCurrent = "";
            string brands = Request.QueryString["brand"] != null ? Request.QueryString["brand"].ToString() : "";
            if (Request.QueryString["pageNumber"] != null)
            {
                pageNumberCurrent = Request.QueryString["pageNumber"].ToString();
                @:window.pageNumber = "@pageNumberCurrent";
                        if (Request.QueryString["pageNumber"].ToString() != "1") {
                    labelFilters = HttpUtility.HtmlDecode(Request.QueryString["labelFilter"]) ?? "";
                }
            }

            var dict = HttpUtility.ParseQueryString(Request.QueryString.ToString());
            dict.Remove("labelFilter");
            dict.Remove("pageNumber");

            if(dict.Count == 0)
            {
                dict.Add("idCategory", @Model.IdCategory.ToString());
            }

            json_ = new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(dict.AllKeys.ToDictionary(k => k, k => dict[k]));

        }

        window.filterManipulation = JSON.parse("@json_".replace(/&quot;/g,'"'));
                   
        //window.filterManipulation = { idCategory: @Model.IdCategory, idBrand : "@brands" };


        @if(labelFilters != "") {
            @:window.filterManipulation.labelFilter = JSON.parse("@labelFilters".replace(/&quot;/g,'"'));
        }

    </script>
}