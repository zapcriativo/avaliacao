@model DomainProduct.Entities.Product

<div class="item produtoList" itemscope itemtype="http://schema.org/Product" data-exhausted="@Model.FlagExhausted" id="Product_@Model.IdProduct">
    <link itemprop="url" href="@Model.UrlFriendly" rel="author" />
    <div class="ui small image">
        <a itemprop="url" href="#">
            <img src="@Model.ImageHome" data-src="@Model.ImageHome" id="mainImageCard_@Model.IdProduct" onerror="imgError(this)">
        </a>
    </div>
    <div class="content">
        <a class="header" href="#"><span itemprop="name">@Model.Name</span></a>
        <div class="meta">
            <span>@Model.Code</span>
        </div>
        <div class="sku-options">
            <div class="ui grid horizontal divided middle aligned">
                <div class="row two column stackable doubling">
                    @if (Model.AvailableReferences != null)
                    {
                        foreach (var reference in Model.AvailableReferences)
                        {
                            <div class="column">
                                <div id="referencefromproduct_@Model.IdProduct" class="ui fluid selection dropdown dropdownreference" data-idproduct="@Model.IdProduct">
                                    <input type="hidden" name="reference" id="@reference.Name">
                                    <i class="dropdown icon"></i>
                                    <span class="text">@reference.Name</span>
                                    <div class="menu">
                                        <div class="header">
                                            @reference.Name
                                        </div>
                                        <div class="scrolling menu">
                                            @foreach (var variation in reference.Variations)
                                            {
                                                <div id="idVariation" class="item" data-value="@variation.IdVariation">
                                                    @if (variation.Color != null)
                                                    {
                                                        <div class="ui empty circular label" style="background-color: @LojaCorp.Control.Static.HexaToRgb(variation.Color) !important; border-color: #1B1C1D !important;"></div>
                                                    }
                                                    @variation.Name
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>

        @if (Model.SKUs != null)
        {
            <div id="quantityBuyed_@Model.IdProduct" class="meta">
                <span>Quantidade Solicitada: 0</span>
            </div>
            <div id="quantityPurchased_@Model.IdProduct" class="meta">
                <span>Quantidade Comprada: 0</span>
            </div>
        }
        else
        {
            <div id="quantityBuyed_@Model.IdProduct" class="meta">
                <span>Quantidade Solicitada: @Model.EventList.quantityRequest </span>
            </div>
            <div id="quantityPurchased_@Model.IdProduct" class="meta">
                <span>Quantidade Comprada: @Model.EventList.quantityPurchased </span>
            </div>
        }


    </div>
    <div class="extra">
        <span itemprop="offers" itemscope itemtype="http://schema.org/Offer">
            @if (Model.PricePromotion != null && Model.PricePromotion > 0)
            {
                <span id="basePrice_@Model.IdProduct" class="precoBase">de <i>@string.Format("{0:c}", Model.Price)</i> por</span>
                    <span itemprop="preco" class="preco">@string.Format("{0:c}", Model.PricePromotion)</span>
            }
            else
            {
                <span id="price_@Model.IdProduct" class="preco">@string.Format("{0:c}", Model.Price)</span>
            }

            @if (Model.InstallmentMax != null)
            {
                <span>
                    ou em <span class="installmentMaxNumber">@Model.InstallmentMax.MaxNumber</span>
                    x de <span class="installmentMaxValue">@string.Format("{0:c}", Model.InstallmentMax.Value)</span>
                </span>
            }
        </span>
        <div class="ui divider hidden"></div>
        @if (Model.FlagExhausted || Model.Stock <= 0)
            {
            <a id="btn-comprar-card-@Model.IdProduct" class="ui labeled icon button grey fluid avise-card avise-me-modal" data-idproduct="@Model.IdProduct" data-name="@Model.Name">
                <i id="btn-icon-card-@Model.IdProduct" class="icon announcement"></i>
                Avise-me
            </a>
        }
        else
        {
            <a id="btn-comprar-card-@Model.IdProduct" class="ui labeled icon button green btn-comprar-card" data-idproduct="@Model.IdProduct" data-name="@Model.Name">
                <i id="btn-icon-card-@Model.IdProduct" class="icon add to cart "></i>
                Comprar
            </a>
        }
    </div>
</div>