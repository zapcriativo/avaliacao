{"version":3,"sources":["jquery.jetcheckout.js"],"names":["$","window","document","undefined","init","element","options","this","settings","extend","defaults","JetCheckout","prototype","pluginName","cleanString","value","replace","requiredSelector","fieldGroupSelector","debug","fieldSelector","pj","selector","pf","success","class","message","pattern","toValidate","creditcard","type","email","name","number","phone","zipcode","onValidateFail","onValidateClear","onValidateSucess","onNext","disableEvent","onUnFinishedForm","onFinishedForm","form","fields","field","$element","jet","groupSelector","tabIndex","find","attr","show","each","fn","setId","keypressDelay","_this","clearTimeout","timer","setTimeout","$input","keypress","callback","ms","keyCode","e","which","validateField","$this","showNextField","onInputComplete","call","on","val","endOfForm","$field","fieldBehaviour","validate","validateOptions","key","changeProfile","regex","validateCPF","length","fieldClear","id","fieldIsInvalid","fieldIsValid","test","validacep","onValidateInputComplete","isValid","removeClass","error","showErrorMsg","remove","addClass","profile","hide","is","active","showElement","$fieldObject","belongsToProfileSelector","index","$error","required","arguments","$incomplete","fadeIn","complete","$sucess","incomplete","onshowNextField","formStatus","status","$notError","$notSucess","isTheEnd","hasClass","isGroup","$currentElement","validateShowField","parent","$nextElement","next","firstElementChild","random","data","verifierDigit","S4","reverse","numbers","toString","buffer","mod","CNPJ","BLACKLIST","stripped","cnpj","STRICT_STRIP_REGEX","LOOSE_STRIP_REGEX","modulus","split","reduce","concat","parseInt","format","strip","multiplied","strict","indexOf","substr","cpf","params","map","CPF","html","append","jQuery"],"mappings":"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","file":"jquery.jetcheckout.min.js","sourcesContent":["/**\r\n * JetCheckout Plugin\r\n * Author: Heitor Ramon Ribeiro\r\n * Email: heitor.ramon@gmail.com\r\n * Website: www.heitorramon.com\r\n * Repo: https://github.com/bloodf/jetcheckout\r\n */\r\n;(function ($, window, document, undefined) {\r\n\r\n    \"use strict\";\r\n    const pluginName  = \"jetCheckout\",\r\n          cleanString = (value) => value.replace(/[^\\d]+/g, \"\"),\r\n          defaults    = {\r\n              debug: false,\r\n              fieldSelector: \".field\",\r\n              requiredSelector: \".required\",\r\n              fieldGroupSelector: \".fields\",\r\n              activeClass: \"ativo\",\r\n              profile: {\r\n                  active: \"\",\r\n                  selector: {\r\n                      pf: \".pessoa.fisica\",\r\n                      pj: \".pessoa.juridica\"\r\n                  }\r\n              },\r\n              disabled: {\r\n                  class: \"disabled\"\r\n              },\r\n              success: {\r\n                  class: \"success\",\r\n                  message: {\r\n                      class: \"\"\r\n                  }\r\n              },\r\n              warning: {\r\n                  class: \"warning\",\r\n                  message: {\r\n                      class: \"\"\r\n                  }\r\n              },\r\n              error: {\r\n                  class: \"error\",\r\n                  message: {\r\n                      class: \"ui basic red pointing prompt label\",\r\n                  }\r\n              },\r\n              validate: {\r\n                  default: {\r\n                      type: \"\",\r\n                      pattern: \"\",\r\n                      message: \"\",\r\n                      toValidate: function () {\r\n                          return true;\r\n                      }\r\n                  },\r\n                  date: {\r\n                      type: \"regex\",\r\n                      pattern: /((([0][1-9]|[12][\\d])|[3][01])[-/]([0][13578]|[1][02])[-/][1-9]\\d\\d\\d)|((([0][1-9]|[12][\\d])|[3][0])[-/]([0][13456789]|[1][012])[-/][1-9]\\d\\d\\d)|(([0][1-9]|[12][\\d])[-/][0][2][-/][1-9]\\d([02468][048]|[13579][26]))|(([0][1-9]|[12][0-8])[-/][0][2][-/][1-9]\\d\\d\\d)/u,\r\n                      message: \"Data de Nascimento inválida.\"\r\n                  },\r\n                  creditcard: {\r\n                      type: \"regex\",\r\n                      pattern: /\\d{4}-?\\d{4}-?\\d{4}-?\\d{4}/u,\r\n                      message: \"Cartão de crédito inválido.\"\r\n                  },\r\n                  cpfCnpj: {\r\n                      type: \"cpfcnpj\",\r\n                      message: \"CPF/CNPJ inválido.\"\r\n                  },\r\n                  email: {\r\n                      type: \"regex\",\r\n                      pattern: /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/g,\r\n                      message: \"E-mail inválido. Ex: seuemail@provedor.com\"\r\n                  },\r\n                  empty: {\r\n                      type: \"empty\",\r\n                      message: \"Campo obrigatório.\"\r\n                  },\r\n                  name: {\r\n                      type: \"name\",\r\n                      pattern: /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/u,\r\n                      message: \"Preencha com seu come completo. (Ex: João Silva ou Maria Silva)\"\r\n                  },\r\n                  number: {\r\n                      type: \"regex\",\r\n                      pattern: /^\\d+$/u,\r\n                      message: \"Somente números.\"\r\n                  },\r\n                  phone: {\r\n                      type: \"regex\",\r\n                      pattern: /(^|\\()?\\s*(\\d{2})\\s*(\\s|\\))*(9?\\d{4})(\\s|-)?(\\d{4})($|\\n)/u,\r\n                      message: \"Telefone inválido. (Ex: (16) 3645-9857 ou (16) 98764-5316)\"\r\n                  },\r\n                  select: {\r\n                      type: \"select\",\r\n                      message: \"Escolha uma opção.\"\r\n                  },\r\n                  zipcode: {\r\n                      type: \"zipcode\",\r\n                      message: \"CEP inválido.\",\r\n                      onValidateInputComplete: function () {\r\n                      }\r\n                  }\r\n              },\r\n              onValidateClear: function () {\r\n              },\r\n              onValidateFail: function () {\r\n              },\r\n              onValidateSucess: function () {\r\n              },\r\n              onInputComplete: function () {\r\n              },\r\n              onNext: function () {\r\n              },\r\n              onshowNextField: function () {\r\n              },\r\n              disableEvent: function () {\r\n              },\r\n              onFinishedForm: function (form, fields) {\r\n              },\r\n              onUnFinishedForm: function (form, field) {\r\n              }\r\n          };\r\n\r\n    function JetCheckout(element, options) {\r\n        this.element   = element;\r\n        this.settings  = $.extend({}, defaults, options);\r\n        this._defaults = defaults;\r\n        this._name     = pluginName;\r\n        this.init();\r\n    }\r\n\r\n    $.extend(JetCheckout.prototype, {\r\n        init: function () {\r\n            let $element      = $(this.element),\r\n                jet           = this,\r\n                groupSelector = this.settings.fieldGroupSelector,\r\n                fieldSelector = this.settings.fieldSelector;\r\n\r\n            this.tabIndex = 0;\r\n\r\n            $element.find(`${groupSelector}:not([data-jet-active=\"true\"]), ${fieldSelector}:not([data-jet-active=\"true\"]), [data-jet-active=\"false\"]`)\r\n                .hide()\r\n                .find(\"input\")\r\n                .each(function () {\r\n                    $(this).attr(\"disabled\", true);\r\n                });\r\n\r\n            $element.show();\r\n\r\n            $element.find(groupSelector).each(function () {\r\n                $(this).attr('data-jet-field-group', true);\r\n                $.fn[pluginName].setId($(this));\r\n            });\r\n\r\n            $element.find(fieldSelector).each(function () {\r\n                $.fn[pluginName].setId($(this));\r\n\r\n                $(this).attr(\"data-jet-field\", true);\r\n                let $this         = $(this),\r\n                    $input        = $(this).find(\"input:first\"),\r\n                    keypressDelay = (function () {\r\n                        let timer = 0;\r\n                        return function (callback, ms) {\r\n                            clearTimeout(timer);\r\n                            timer = setTimeout(callback, ms);\r\n                        };\r\n                    })();\r\n\r\n                $input.keypress((e) => {\r\n                    let keyCode = e.keyCode || e.which;\r\n                    if (keyCode === 9) {\r\n                        if (!jet.validateField($this)) {\r\n                            e.preventDefault();\r\n                            $input.focus();\r\n                        }\r\n                    }\r\n                    keypressDelay(function () {\r\n                        if (jet.validateField($this)) {\r\n                            jet.settings.onNext.call($this);\r\n                            jet.showNextField($this);\r\n                        }\r\n\r\n                    }, 500);\r\n                });\r\n                $input.on(\"blur change\", () => {\r\n                    jet.settings.onInputComplete.call($this);\r\n                    if (jet.validateField($this)) {\r\n                        jet.settings.onNext.call($this);\r\n                        jet.showNextField($this);\r\n                        if ($(this).attr(\"data-jet-valid\")) {\r\n                            jet.settings.disableEvent($this);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n        /**\r\n         * Validate a field based on the fieldSelector and the validate rules.\r\n         * Returns if the field is valid or not.\r\n         * @param (Field)\r\n         * @returns {boolean}\r\n         */\r\n        validateField: function ($field) {\r\n            $field             = $($field);\r\n            let jet            = this,\r\n                regex          = false,\r\n                isValid        = false,\r\n                id             = $field.attr(\"data-jet-checkout-id\"),\r\n                $input         = $field.find(\"input:first\"),\r\n                type           = $input.attr(\"data-jet-validate\"),\r\n                fieldBehaviour = $input.attr(\"data-jet-type\"),\r\n                value          = $input.val(),\r\n                message        = \"\";\r\n            jet.endOfForm();\r\n            if (type === undefined) {\r\n                return true;\r\n            }\r\n\r\n            else {\r\n                for (let key in jet.settings.validate) {\r\n                    if (key === type) {\r\n                        let validateOptions = jet.settings.validate[key];\r\n                        message             = validateOptions.message;\r\n                        if (validateOptions.type === \"cpfcnpj\") {\r\n                            if (fieldBehaviour === \"profileChanger\" && cleanString(value).length === 0) {\r\n                                jet.changeProfile(\"clear\");\r\n                                jet.fieldClear($field, id);\r\n                                return false;\r\n                            }\r\n                            if (cleanString(value).length === 11) {\r\n                                jet.changeProfile(\"pf\");\r\n                                regex = $.fn[pluginName].validateCPF(value);\r\n                            }\r\n                            else if (cleanString(value).length === 14) {\r\n                                jet.changeProfile(\"pj\");\r\n                                regex = $.fn[pluginName].validateCNPJ(value);\r\n                            }\r\n                        }\r\n                        else if (validateOptions.type === \"empty\") {\r\n                            if (value !== \"\") {\r\n                                regex = true;\r\n                            }\r\n                        }\r\n                        else if (validateOptions.type === \"function\") {\r\n                            regex = validateOptions.toValidate();\r\n                        }\r\n                        else if (validateOptions.type === \"name\") {\r\n                            if (/[^-\\s]\\s/g.test(value)) {\r\n                                regex = validateOptions.pattern.test(value);\r\n                            }\r\n                        }\r\n                        else if (validateOptions.type === \"regex\") {\r\n                            regex = validateOptions.pattern.test(value);\r\n                        }\r\n                        else if (validateOptions.type === \"select\") {\r\n                            $input = $field.find(\"select:first\");\r\n                            type   = $input.attr(\"data-jet-validate\");\r\n                            value  = $input.val();\r\n                            if (!!value) {\r\n                                jet.fieldIsInvalid($field, id);\r\n                                return false;\r\n                            }\r\n                            else {\r\n                                jet.fieldIsValid($field, id);\r\n                                return true;\r\n                            }\r\n                        }\r\n                        else if (validateOptions.type === \"zipcode\") {\r\n                            let validacep = /^[0-9]{8}$/;\r\n                            value         = cleanString(value);\r\n                            if (value === \"\" || value.length >= 1 && !validacep.test(value)) {\r\n                                regex = false;\r\n                            }\r\n                            else if (validacep.test(value)) {\r\n                                regex = true;\r\n                                validateOptions.onValidateInputComplete();\r\n                            }\r\n                            else {\r\n                                return false;\r\n                            }\r\n                        }\r\n\r\n                        if (regex) {\r\n                            isValid = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (isValid) {\r\n                jet.fieldIsValid($field, id);\r\n                return true;\r\n            }\r\n            else {\r\n                jet.fieldIsInvalid($field, id, message);\r\n                return false;\r\n            }\r\n        },\r\n        /**\r\n         * change the field to a valid state\r\n         * @param $field\r\n         * @param id\r\n         */\r\n        fieldClear: function ($field, id) {\r\n            $field  = $($field);\r\n            let jet = this;\r\n            $field.attr(\"data-jet-valid\", true).removeClass(jet.settings.error.class).removeClass(jet.settings.success.class);\r\n            $.fn[pluginName].showErrorMsg({remove: true, id: id});\r\n            jet.settings.onValidateClear.call($field);\r\n        },\r\n        /**\r\n         * change the field to a valid state\r\n         * @param $field\r\n         * @param id\r\n         */\r\n        fieldIsValid: function ($field, id) {\r\n            $field  = $($field);\r\n            let jet = this;\r\n\r\n            $field.attr(\"data-jet-valid\", true).removeClass(jet.settings.error.class).addClass(jet.settings.success.class);\r\n            $.fn[pluginName].showErrorMsg({remove: true, id: id});\r\n            jet.settings.onValidateSucess.call($field);\r\n        },\r\n        /**\r\n         * Change the field to a invalid state\r\n         * @param $field\r\n         * @param id\r\n         * @param message\r\n         */\r\n        fieldIsInvalid: function ($field, id, message) {\r\n            $field  = $($field);\r\n            let jet = this;\r\n            $field.attr(\"data-jet-valid\", false).removeClass(jet.settings.success.class).addClass(jet.settings.error.class);\r\n            $.fn[pluginName].showErrorMsg({message: message, id: id, class: jet.settings.error.message.class});\r\n\r\n            jet.settings.onValidateFail.call($field);\r\n        },\r\n        /**\r\n         * Change the current active profile.\r\n         * Set by the key of the profiles.selector rules\r\n         *\r\n         * @param profile\r\n         */\r\n        changeProfile: function (profile) {\r\n            let jet = this;\r\n            if (profile === \"clear\") {\r\n                for (let key in jet.settings.profile.selector) {\r\n                    $(`${jet.settings.profile.selector[key]}`).hide().find(\"input:first\").val(\"\").attr(\"disabled\", true);\r\n                }\r\n                return false;\r\n            }\r\n\r\n            for (let key in jet.settings.profile.selector) {\r\n                if (profile === \"clear\") {\r\n                    $(`${jet.settings.profile.selector[key]}`).hide().find(\"input:first\").val(\"\").attr(\"disabled\", true);\r\n                }\r\n                if (key === profile) {\r\n                    jet.settings.profile.active = jet.settings.profile.selector[key];\r\n                    $(`${jet.settings.profile.active}`).find(\"input:first\").val(\"\").attr(\"disabled\", false);\r\n                }\r\n                $(`${jet.settings.profile.selector[key]}:not(${jet.settings.profile.active})`).hide().find(\"input:first\").val(\"\").attr(\"disabled\", true);\r\n            }\r\n        },\r\n        /**\r\n         * Check if the field belongs to a valid profile selector.\r\n         * @param (field)\r\n         * @returns {boolean}\r\n         */\r\n        belongsToProfileSelector: function ($field) {\r\n            $field  = $($field);\r\n            let jet = this;\r\n            for (let key in jet.settings.profile.selector) {\r\n                if ($field.is(jet.settings.profile.selector[key])) return true;\r\n            }\r\n            return false;\r\n        },\r\n        /**\r\n         * Show the field and add focus to it if is needed.\r\n         * @param (field)\r\n         */\r\n        showElement: function ($fieldObject, revel = false) {\r\n            $fieldObject = $($fieldObject);\r\n            let jet      = this;\r\n\r\n            $fieldObject\r\n                .attr(\"data-jet-active\", true)\r\n                .fadeIn()\r\n                .focus()\r\n                .find(\"input\")\r\n                .each(function () {\r\n                    $(this).attr(\"disabled\", false);\r\n                });\r\n            if ($fieldObject.is(jet.settings.fieldSelector) && $fieldObject.is(\"visible\")) {\r\n                let index = jet.tabIndex = jet.tabIndex + 1;\r\n                $fieldObject.attr(\"tabindex\", index);\r\n            }\r\n            jet.settings.onshowNextField($fieldObject);\r\n\r\n        },\r\n        formStatus: function () {\r\n            let jet         = this,\r\n                required    = `${jet.settings.fieldSelector}${jet.settings.requiredSelector}`,\r\n                error       = `${jet.settings.error.class}`,\r\n                success     = `${jet.settings.success.class}`,\r\n                $error      = $(`${required}.${error}:visible:not(.${success})`),\r\n                $sucess     = $(`${required}.${success}:visible:not(.${error})`),\r\n                $incomplete = $(`${required}:visible:not(.${success}):not(.${error})`),\r\n                $notError   = $(`${required}:not(.${error}):visible`),\r\n                $notSucess  = $(`${required}:visible:not(.${success})`);\r\n\r\n            return {\r\n                complete: (!!jet.isTheEnd && !$incomplete.length && !$notSucess.hasClass(error) && $notError.hasClass(success)),\r\n                error: ($error.hasClass(error)),\r\n                success: ($notError.hasClass(success) && !$incomplete.length && !$notSucess.hasClass(error)),\r\n                fields: {\r\n                    error: $error,\r\n                    success: $sucess,\r\n                    incomplete: $incomplete\r\n                }\r\n            };\r\n\r\n        },\r\n        endOfForm: function () {\r\n            let jet    = this,\r\n                status = jet.formStatus();\r\n            if (jet.executed) {\r\n                if (status.error) {\r\n                    jet.settings.onUnFinishedForm(jet.element, status.fields);\r\n                }\r\n                if (status.success && status.complete) {\r\n                    jet.settings.onFinishedForm(jet.element, status.fields);\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Show the next element of the field.\r\n         * @param (field)\r\n         * @param isGroup {boolean}\r\n         * @returns {boolean}\r\n         */\r\n        showNextField: function ($currentElement, isGroup = false) {\r\n            $currentElement  = $($currentElement);\r\n            let jet          = this,\r\n                $nextElement = $currentElement.next();\r\n\r\n            if (!$currentElement.length) {\r\n                return false;\r\n            }\r\n            if (isGroup) {\r\n                jet.validateShowField($currentElement);\r\n                return false;\r\n            }\r\n            else if (!$nextElement.length) {\r\n                if (!$currentElement.parent().next().length) {\r\n                    if (this.isTheEnd === undefined) {\r\n                        this.isTheEnd = true;\r\n                        jet.executed  = true;\r\n                    }\r\n                    this.endOfForm();\r\n                    return true;\r\n                }\r\n                jet.validateShowField($currentElement.parent().next());\r\n                return false;\r\n            }\r\n            else {\r\n                jet.validateShowField($nextElement);\r\n                return false;\r\n            }\r\n        },\r\n        /**\r\n         * Internal Funcion to check the field.\r\n         * @param $currentElement\r\n         * @returns {boolean}\r\n         */\r\n        validateShowField: function ($currentElement) {\r\n            $currentElement = $($currentElement);\r\n            let jet         = this;\r\n\r\n            if ($currentElement.is(\"form\")) {\r\n                return false;\r\n            }\r\n            else if (!!$currentElement.attr(\"data-jet-revel\") && $currentElement.is(jet.settings.fieldSelector)) {\r\n                jet.showElement($currentElement, true);\r\n                jet.showNextField($currentElement);\r\n                return false;\r\n            }\r\n            else if (!(!!$currentElement.attr(\"data-jet-checkout-id\"))) {\r\n                jet.showElement($currentElement);\r\n                jet.showNextField($currentElement);\r\n                return false;\r\n            }\r\n\r\n            else if (this.belongsToProfileSelector($currentElement)) {\r\n                if ($currentElement.is(jet.settings.profile.active)) {\r\n                    if (!!$currentElement.attr(\"data-jet-field-group\")) {\r\n                        jet.showElement($currentElement);\r\n                        jet.showNextField($currentElement[0].firstElementChild, true);\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        jet.showElement($currentElement);\r\n                        return false;\r\n                    }\r\n                }\r\n                else {\r\n                    jet.showNextField($currentElement);\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            else if (!!$currentElement.attr(\"data-jet-field-group\")) {\r\n                jet.showElement($currentElement);\r\n                jet.showNextField($currentElement[0].firstElementChild, true);\r\n                return false;\r\n            }\r\n\r\n            else {\r\n                jet.showElement($currentElement);\r\n                return false;\r\n            }\r\n\r\n        },\r\n    });\r\n\r\n    $.fn[pluginName] = function (options) {\r\n        return this.each(function () {\r\n            if (!$.data(this, \"data-\" + pluginName)) {\r\n                $.data(this, \"data-\" +\r\n                    pluginName, new JetCheckout(this, options));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Make an ID\r\n     * @returns {string}\r\n     */\r\n    $.fn[pluginName].makeId = function () {\r\n        let S4 = () => {\r\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        };\r\n        return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\r\n    };\r\n    /**\r\n     * Set an ID to a field.\r\n     * @param (field)\r\n     * @param id\r\n     * @returns {*}\r\n     */\r\n    $.fn[pluginName].setId = function ($field, id = \"\") {\r\n        $field = $($field);\r\n\r\n        if (id === \"\") {\r\n            id = $.fn[pluginName].makeId();\r\n            $field.attr(\"data-jet-checkout-id\", id);\r\n            return id;\r\n        }\r\n        else {\r\n            $field.attr(\"data-jet-checkout-id\", id);\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * validante brazilian cnpj\r\n     * @param cnpj\r\n     * @returns {boolean}\r\n     */\r\n    $.fn[pluginName].validateCNPJ = function (cnpj) {\r\n        let BLACKLIST          = [\r\n                \"00000000000000\",\r\n                \"11111111111111\",\r\n                \"22222222222222\",\r\n                \"33333333333333\",\r\n                \"44444444444444\",\r\n                \"55555555555555\",\r\n                \"66666666666666\",\r\n                \"77777777777777\",\r\n                \"88888888888888\",\r\n                \"99999999999999\"\r\n            ],\r\n            STRICT_STRIP_REGEX = /[-\\/.]/g,\r\n            LOOSE_STRIP_REGEX  = /[^\\d]/g,\r\n            CNPJ               = {};\r\n\r\n        let verifierDigit = function (numbers) {\r\n            let index   = 2;\r\n            let reverse = numbers.split(\"\").reduce(function (buffer, number) {\r\n                return [parseInt(number, 10)].concat(buffer);\r\n            }, []);\r\n\r\n            let sum = reverse.reduce(function (buffer, number) {\r\n                buffer += number * index;\r\n                index = (index === 9 ? 2 : index + 1);\r\n                return buffer;\r\n            }, 0);\r\n\r\n            let mod = sum % 11;\r\n            return (mod < 2 ? 0 : 11 - mod);\r\n        };\r\n        CNPJ.format       = function (number) {\r\n            return this.strip(number).replace(/^(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})$/, \"$1.$2.$3/$4-$5\");\r\n        };\r\n        CNPJ.strip        = function (number, strict) {\r\n            let regex = strict ? STRICT_STRIP_REGEX : LOOSE_STRIP_REGEX;\r\n            return (number || \"\").toString().replace(regex, \"\");\r\n        };\r\n        CNPJ.isValid      = function (number, strict) {\r\n            let stripped = this.strip(number, strict);\r\n            if (!stripped) {\r\n                return false;\r\n            }\r\n            if (stripped.length !== 14) {\r\n                return false;\r\n            }\r\n            if (BLACKLIST.indexOf(stripped) >= 0) {\r\n                return false;\r\n            }\r\n\r\n            let numbers = stripped.substr(0, 12);\r\n            numbers += verifierDigit(numbers);\r\n            numbers += verifierDigit(numbers);\r\n\r\n            return numbers.substr(-2) === stripped.substr(-2);\r\n        };\r\n        return CNPJ.isValid(cnpj);\r\n    };\r\n    /**\r\n     * validate brazilian cpf\r\n     * @param cpf\r\n     * @returns {boolean}\r\n     */\r\n    $.fn[pluginName].validateCPF = function (cpf) {\r\n        // Blacklist common values.\r\n        let BLACKLIST          = [\r\n                \"00000000000\",\r\n                \"11111111111\",\r\n                \"22222222222\",\r\n                \"33333333333\",\r\n                \"44444444444\",\r\n                \"55555555555\",\r\n                \"66666666666\",\r\n                \"77777777777\",\r\n                \"88888888888\",\r\n                \"99999999999\",\r\n                \"12345678909\"\r\n            ],\r\n            STRICT_STRIP_REGEX = /[.-]/g,\r\n            LOOSE_STRIP_REGEX  = /[^\\d]/g,\r\n            CPF                = {};\r\n\r\n        let verifierDigit = function (numbers) {\r\n            numbers = numbers\r\n                .split(\"\")\r\n                .map(function (number) {\r\n                    return parseInt(number, 10);\r\n                })\r\n            ;\r\n\r\n            let modulus = numbers.length + 1;\r\n\r\n            let multiplied = numbers.map(function (number, index) {\r\n                return number * (modulus - index);\r\n            });\r\n\r\n            let mod = multiplied.reduce(function (buffer, number) {\r\n                    return buffer + number;\r\n                }) % 11;\r\n\r\n            return (mod < 2 ? 0 : 11 - mod);\r\n        };\r\n        CPF.strip         = function (number, strict) {\r\n            let regex = strict ? STRICT_STRIP_REGEX : LOOSE_STRIP_REGEX;\r\n            return (number || \"\").toString().replace(regex, \"\");\r\n        };\r\n        CPF.isValid       = function (number, strict) {\r\n            let stripped = this.strip(number, strict);\r\n            if (!stripped) {\r\n                return false;\r\n            }\r\n            if (stripped.length !== 11) {\r\n                return false;\r\n            }\r\n            if (BLACKLIST.indexOf(stripped) >= 0) {\r\n                return false;\r\n            }\r\n\r\n            let numbers = stripped.substr(0, 9);\r\n            numbers += verifierDigit(numbers);\r\n            numbers += verifierDigit(numbers);\r\n\r\n            return numbers.substr(-2) === stripped.substr(-2);\r\n        };\r\n\r\n        return CPF.isValid(cpf);\r\n    };\r\n    /**\r\n     * Show the error message based on the config.\r\n     *\r\n     * @param params{\r\n         * id: (data-jet-checkout-id of the element it will be appended the message)\r\n         * class: class of the message that will be added\r\n         * message: string of the message,\r\n         * remove: {boolean} true: remove the message\r\n         * }\r\n     */\r\n    $.fn[pluginName].showErrorMsg = function (params) {\r\n        let $field = $(`[data-jet-checkout-id=\"${params.id}\"]`);\r\n        let html   = `<div class=\"${params.class}\" data-error-for=\"${params.id}\">${params.message}</div>`;\r\n\r\n        if (params.remove === true) {\r\n            $(`div[data-error-for=\"${params.id}\"]`).remove();\r\n        }\r\n        else {\r\n            if ($field.find(`div[data-error-for=\"${params.id}\"]`).length <= 0) {\r\n                $field.append(html);\r\n            }\r\n        }\r\n    };\r\n\r\n})(jQuery, window, document);"]}